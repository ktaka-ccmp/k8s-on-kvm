customRules:

  custom-rules-file.yaml: |-

    - macro: apps_secure_k8s_file
      condition: (k8s.ns.name in (dev,prd) and (
        (k8s.pod.name startswith db- and proc.exepath = /usr/local/bin/redis-server and fd.name in (/proc/self/stat))
        ))

    - macro: user_apps_file
      condition: (
        apps_secure_k8s_file
        )

    - macro: never_true
      condition: (evt.num=0)

    - macro: open_write
      condition: (evt.type in (open,openat,openat2) and evt.is_open_write=true and fd.typechar='f' and fd.num>=0)

    - macro: open_read
      condition: (evt.type in (open,openat,openat2) and evt.is_open_read=true and fd.typechar='f' and fd.num>=0)

    - macro: create_symlink
      condition: (evt.type in (symlink, symlinkat) and evt.dir=<)

    - macro: create_hardlink
      condition: (evt.type in (link, linkat) and evt.dir=<)

    - macro: libraries
      condition: (
        (fd.name = /etc/ld.so.cache)
        or (fd.name startswith /usr/lib/)
        or (fd.name startswith /lib/x86_64-linux-gnu/)
        )

    - macro: file_read
      condition: (
        (container.id = host and (
           proc.exepath = /usr/bin/kubelet
           or (proc.exepath = /usr/local/bin/containerd-shim-runc-v2 and fd.name in (/dev/null, /proc/sys/net/core/somaxconn, /usr/local/bin/containerd-shim-runc-v2))
           or (proc.exepath = /usr/local/bin/containerd-shim-runc-v2 and fd.name pmatch (/run/containerd/))
           or (proc.exepath = /usr/local/bin/containerd-shim-runc-v2 and fd.name pmatch (/proc/self/))
           or (proc.exepath = /usr/local/bin/containerd-shim-runc-v2 and fd.name glob "/proc/*/cgroup")
           or (proc.exepath = /usr/local/bin/containerd-shim-runc-v2 and fd.name pmatch (/sys/fs/cgroup/))
           or (proc.exepath = /usr/local/bin/containerd and fd.name startswith /var/lib/containerd/)
           or (proc.exepath = /usr/local/bin/containerd and fd.name pmatch (/proc/self/))
           or (proc.exepath = /usr/local/bin/containerd and fd.name pmatch (/run/containerd/))
           or (proc.exepath = /usr/local/bin/containerd and fd.name pmatch (/var/run/netns/))
           or (proc.exepath = /usr/local/bin/containerd and fd.name in (/dev/null))
           or (proc.exepath = /usr/lib/systemd/systemd and fd.name in (//bin, /dev/null, //usr/bin/bash, //usr/bin, //usr, //sys, //run))
           or (proc.exepath = /usr/lib/systemd/systemd and fd.name startswith /proc/)
           or (proc.exepath = /usr/lib/systemd/systemd and fd.name pmatch (/sys/dev/block))
           or (proc.exepath = /usr/lib/systemd/systemd and fd.name pmatch (/sys/devices/))
           or (proc.exepath = /usr/lib/systemd/systemd and fd.name pmatch (/sys/dev))
           or (proc.exepath = /usr/lib/systemd/systemd and fd.name startswith /run/udev/data)
           or (proc.exepath = /usr/lib/systemd/systemd and fd.name pmatch (/run/systemd))
           or (proc.exepath = /usr/lib/systemd/systemd and fd.name startswith /sys/fs/cgroup/system.slice/)
           or (proc.exepath = /usr/lib/systemd/systemd and fd.name startswith /sys/fs/cgroup/kubepods.slice/)
           or (proc.exepath = /usr/lib/systemd/systemd-journald and fd.name startswith /proc/)
           or (proc.exepath = /usr/lib/systemd/systemd-journald and fd.name startswith /run/systemd/journal/streams/)
           or (proc.exepath = /usr/lib/sysstat/sadc and fd.name in (/etc/localtime, /etc/sensors3.conf))
           or (proc.exepath = /usr/lib/sysstat/sadc and fd.name startswith /proc/)
           or (proc.exepath = /usr/lib/sysstat/sadc and fd.name startswith /sys/class/net/)
           or (proc.exepath = /usr/lib/sysstat/sadc and fd.name startswith /var/log/sysstat/sa)
           or (proc.exepath = /usr/bin/kmod and fd.name startswith /lib/modprobe.d/)
           or (proc.exepath = /usr/bin/kmod and fd.name startswith /lib/modules/)
           or (proc.exepath = /usr/bin/kmod and fd.name = /proc/cmdline)
           or (proc.exepath = /usr/sbin/cron and fd.name pmatch (/etc/))
           or (proc.exepath = /usr/sbin/cron and fd.name in (/proc/1/limits, /proc/sys/kernel/ngroups_max, /var/run/utmp))
           or (proc.exepath = /usr/sbin/xtables-nft-multi and fd.name = /proc/net/ip_tables_names)
           or (proc.exepath = /usr/bin/dash and proc.name = sa1 and fd.name = /etc/sysstat/sysstat)
           or (proc.exepath = /usr/bin/dash and proc.name startswith ifupdown-hotplu and fd.name = /lib/udev/ifupdown-hotplug)
           or (proc.exepath = /usr/bin/dbus-daemon and fd.name glob "/proc/*/cmdline" )
           or (proc.exepath = /usr/bin/dbus-daemon and fd.name = /run/systemd/users/0 )
           or (proc.exepath = /usr/bin/udevadm and fd.name in (/dev/null, //lib))
           or (proc.exepath = /usr/bin/udevadm and fd.name pmatch (/etc))
           or (proc.exepath = /usr/bin/udevadm and fd.name pmatch (/run))
           or (proc.exepath = /usr/bin/udevadm and fd.name pmatch (/sys))
           or (proc.exepath = /usr/bin/udevadm and fd.name pmatch (/usr))
           or (proc.exepath = /usr/bin/umount and fd.name in (/proc/filesystems, /proc/self/mountinfo))
           or (proc.exepath = /usr/bin/umount and fd.name pmatch (/var/lib/kubelet/pods))
           or (proc.exepath = /opt/cni/bin/bridge and fd.name glob "/proc/*/task/*/ns/net" )
           or (proc.exepath = /opt/cni/bin/bridge and fd.name pmatch (/var/run/netns))
           or (proc.exepath = /opt/cni/bin/flannel and fd.name pmatch (/var/lib/cni/flannel))
           or (proc.exepath = /opt/cni/bin/host-local and fd.name pmatch (/var/lib/cni/networks))
           or (proc.exepath = /opt/cni/bin/loopback and fd.name glob "/proc/*/task/*/ns/net" )
           or (proc.exepath = /opt/cni/bin/loopback and fd.name pmatch (/var/run/netns))
           or (proc.cmdline = "6 init" and proc.name = 6 and proc.pname = runc and fd.name in (/proc/self/exe, /proc/self/oom_score_adj))
        ))
        or (proc.exepath = /usr/sbin/runc and fd.name pmatch (/run/containerd/))
        or (proc.exepath = /usr/sbin/runc and fd.name pmatch (/sys/fs/cgroup/))
        or (proc.exepath = /usr/sbin/runc and fd.name pmatch (/proc/))
        or (proc.exepath = /usr/sbin/runc and fd.name in (/dev/null, /etc/localtime, /usr/sbin/runc))
        or (proc.exepath = /usr/sbin/runc and fd.name in (/, /etc/group, /etc/passwd) and proc.name startswith runc:)
        or (k8s.ns.name = falco and (
           (k8s.pod.name startswith falco- and proc.exepath = /usr/bin/falco and fd.name in (/etc/hosts, /etc/nsswitch.conf, /etc/resolv.conf, /sys/devices/system/cpu/online))
           or (k8s.pod.name startswith falco- and proc.exepath = /usr/bin/falcoctl and fd.name startswith /root/.sigstore/)
           or (k8s.pod.name startswith falco- and proc.exepath = /usr/bin/falcoctl and fd.name startswith /rulesfiles/)
           or (k8s.pod.name startswith falco- and proc.exepath = /usr/bin/falcoctl and fd.name startswith /tmp/falcoctl-)
           or (k8s.pod.name startswith falco-falcosidekick- and proc.exepath = /app/falcosidekick and fd.name in (/etc/hosts, /etc/resolv.conf, /etc/nsswitch.conf))
           or (k8s.pod.name startswith falco-falcosidekick-ui- and proc.exepath = /app/falcosidekick-ui and fd.name startswith /app/frontend/dist)
           or (k8s.pod.name startswith falco-falcosidekick-ui- and proc.exepath = /app/falcosidekick-ui and fd.name in (/etc/hosts, /etc/resolv.conf, /proc/sys/net/core/somaxconn))
           or (k8s.pod.name startswith falco-falcosidekick-ui-redis- and proc.exepath = /opt/redis-stack/nodejs/bin/node and fd.name in (/etc/hosts))
           or (k8s.pod.name startswith falco-falcosidekick-ui-redis- and proc.exepath = /opt/redis-stack/bin/redis-server and fd.name = /proc/self/smaps)
           or (k8s.pod.name startswith falco-falcosidekick-ui-redis- and proc.exepath = /opt/redis-stack/bin/redis-server and fd.name glob "/proc/*/stat")
        ))
        or (k8s.ns.name = kube-flannel and (
           (k8s.pod.name startswith kube-flannel and proc.exepath = /opt/bin/flanneld and fd.name in (/dev/null, /var/run/secrets/kubernetes.io/serviceaccount/token))
           or (k8s.pod.name startswith kube-flannel and proc.exepath = /sbin/xtables-nft-multi and fd.name = /proc/net/ip_tables_names)
        ))
        or (k8s.ns.name = kube-system and (
           (k8s.pod.name startswith etcd- and proc.exepath = /usr/local/bin/etcd and fd.name = /proc/self/fd)
           or (k8s.pod.name startswith etcd- and proc.exepath = /usr/local/bin/etcd and fd.name startswith /var/lib/etcd/member/)
           or (k8s.pod.name startswith etcd- and proc.exepath = /usr/local/bin/etcd and fd.name startswith /etc/kubernetes/pki/etcd/)
           or (k8s.pod.name startswith kube-apiserver- and proc.exepath = /usr/local/bin/kube-apiserver and fd.name startswith /etc/kubernetes/pki/apiserver-)
           or (k8s.pod.name startswith kube-proxy- and proc.exepath = /usr/local/bin/kube-proxy and fd.name in (/dev/null, /etc/nsswitch.conf, /etc/protocols, /var/run/secrets/kubernetes.io/serviceaccount/token))
           or (k8s.pod.name startswith kube-proxy- and proc.exepath = /usr/sbin/xtables-nft-multi and fd.name in (/proc/net/ip_tables_names, /etc/nsswitch.conf, /etc/protocols))
           or (k8s.pod.name startswith coredns- and proc.exepath = /coredns and fd.name in (/etc/coredns/Corefile, /var/run/secrets/kubernetes.io/serviceaccount/token))
        ))
        )

    - macro: file_write
      condition: (
        (container.id = host and (
          proc.exepath = /usr/bin/kubelet
          or (proc.exepath = /usr/bin/apt-config and fd.name = /dev/null)
          or (proc.exepath = /usr/bin/apt-get and fd.name in (/dev/null, /var/lib/dpkg/lock, /var/lib/dpkg/lock-frontend))
          or (proc.exepath = /usr/lib/apt/apt-helper and fd.name = /dev/null)
          or (proc.exepath = /usr/bin/gpgconf and fd.name = /dev/null)
          or (proc.exepath = /usr/bin/udevadm and fd.name = /proc/self/oom_score_adj)
          or (proc.exepath = /usr/bin/dash and fd.name in (/dev/null, /run/motd.dynamic.new, /var/lib/apt/daily_lock))
          or (proc.exepath = /usr/bin/bash and fd.name in (/dev/tty, /root/.bash_history))
          or (proc.exepath = /usr/lib/systemd/systemd and fd.name = /proc/self/oom_score_adj)
          or (proc.exepath = /usr/lib/systemd/systemd and fd.name startswith /run/systemd/transient/)
          or (proc.exepath = /usr/lib/systemd/systemd and fd.name startswith /sys/fs/cgroup/kubepods.slice/)
          or (proc.exepath = /usr/lib/systemd/systemd and fd.name startswith /sys/fs/cgroup/system.slice/)
          or (proc.exepath = /usr/lib/systemd/systemd and fd.name startswith /sys/fs/cgroup/user.slice/)
          or (proc.exepath = /usr/lib/systemd/systemd-journald and fd.name startswith /run/systemd/journal/streams/)
          or (proc.exepath = /usr/local/bin/containerd and fd.name startswith /run/containerd/)
          or (proc.exepath = /usr/local/bin/containerd and fd.name startswith /proc/self/fd/)
          or (proc.exepath = /usr/local/bin/containerd and fd.name startswith /var/lib/containerd/)
          or (proc.exepath = /usr/local/bin/containerd and fd.name startswith /var/log/pods/)
          or (proc.exepath = /usr/local/bin/containerd-shim-runc-v2 and fd.name startswith /run/containerd/)
          or (proc.exepath = /usr/local/bin/containerd-shim-runc-v2 and fd.name startswith /proc/self/fd/)
          or (proc.exepath = /usr/local/bin/containerd-shim-runc-v2 and fd.name startswith /sys/fs/cgroup/)
          or (proc.exepath = /usr/sbin/runc and fd.name startswith /sys/fs/cgroup/)
          or (proc.exepath = /usr/sbin/runc and fd.name startswith /run/containerd/)
          or (proc.exepath = /usr/sbin/sshd and fd.name in (/dev/null, /dev/ptmx, /dev/pts/0, /dev/tty, /proc/self/oom_score_adj, /var/log/lastlog, /var/log/wtmp, /var/run/utmp))
          or (proc.exepath = /usr/lib/sysstat/sadc and fd.name startswith /var/log/sysstat/sa)
          or (proc.cmdline = "6 init" and proc.name = 6 and proc.pname = runc and fd.name startswith /proc/self/oom_score_adj)
        ))
        or (proc.exepath = /usr/sbin/runc and fd.name startswith /proc/self/fd/)
        or (proc.exepath = /usr/sbin/runc and fd.name = /dev/null)
        or (k8s.ns.name = kube-system and k8s.pod.name startswith etcd- and proc.exepath = /usr/local/bin/etcd and fd.name startswith /var/lib/etcd/member/)
        or (k8s.ns.name = kube-flannel and k8s.pod.name startswith kube-flannel and proc.exepath = /opt/bin/flanneld and fd.name = /dev/null)
        or (k8s.ns.name = falco and (
           (k8s.pod.name startswith falco-falcosidekick-ui-redis- and proc.exepath = /opt/redis-stack/bin/redis-server and fd.name startswith /data/)
           or (k8s.pod.name startswith falco-falcosidekick-ui-redis- and proc.exepath = /opt/redis-stack/nodejs/bin/node and fd.name startswith /redisinsight/)
           or (k8s.pod.name startswith falco- and proc.exepath = /usr/bin/falcoctl and fd.name startswith /root/.sigstore/)
           or (k8s.pod.name startswith falco- and proc.exepath = /usr/bin/falcoctl and fd.name startswith /rulesfiles/)
           or (k8s.pod.name startswith falco- and proc.exepath = /usr/bin/falcoctl and fd.name startswith /tmp/falcoctl-)
        ))
        )

    - macro: symlink_at
      condition: (
        (evt.type = symlinkat and proc.exepath = /usr/lib/systemd/systemd and proc.name = systemd)
        or (evt.type = symlinkat and proc.exepath = /usr/sbin/runc and proc.name startswith runc:)
        )

    #    or (proc.exepath = /usr/lib/systemd/systemd-logind and fd.name startswith /run/systemd/sessions/)
    #    or (proc.exepath = /usr/lib/systemd/systemd-logind and fd.name startswith /run/systemd/users/)

    - macro: file_read_exempt
      condition: (
        file_read
        or libraries
        or user_apps_file
        )

    - macro: file_write_exempt
      condition: (
        file_write
        or symlink_at
        )

    - rule: Unexpected File Read
      desc: Detected unexpected File Read
      enabled: true
      condition: open_read and not file_read_exempt
      output: Detected Unexpected File Read (host=%evt.hostname file=%fd.name pcmdline=%proc.pcmdline gparent=%proc.aname[2] ggparent=%proc.aname[3] gggparent=%proc.aname[4] aname[5]=%proc.aname[5] aname[6]=%proc.aname[6] aname[7]=%proc.aname[7] evt_type=%evt.type read=%evt.is_open_read write=%evt.is_open_write user=%user.name user_uid=%user.uid user_loginuid=%user.loginuid process=%proc.name proc_exepath=%proc.exepath parent=%proc.pname command=%proc.cmdline terminal=%proc.tty exe_flags=%evt.arg.flags %container.info)
      priority: WARNING
      tags: [catch_all, file_read, ktaka]

    - rule: Unexpected File Write
      desc: Detected unexpected File Write
      enabled: true
      condition: (open_write or create_symlink or create_hardlink) and not file_write_exempt
      output: Detected Unexpected File  Write (host=%evt.hostname file=%fd.name pcmdline=%proc.pcmdline gparent=%proc.aname[2] ggparent=%proc.aname[3] gggparent=%proc.aname[4] aname[5]=%proc.aname[5] aname[6]=%proc.aname[6] aname[7]=%proc.aname[7] evt_type=%evt.type read=%evt.is_open_read write=%evt.is_open_write user=%user.name user_uid=%user.uid user_loginuid=%user.loginuid process=%proc.name proc_exepath=%proc.exepath parent=%proc.pname command=%proc.cmdline terminal=%proc.tty exe_flags=%evt.arg.flags %container.info)
      priority: WARNING
      tags: [catch_all, file_write, ktaka]
