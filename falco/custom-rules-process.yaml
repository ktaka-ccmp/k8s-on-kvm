customRules:

  custom-rules-process.yaml: |-

    - macro: spawned_process
      condition: (evt.type in (execve, execveat) and evt.dir=<)

    - macro: kubelet_children
      condition: proc.pname = kubelet and proc.name in (iptables, ip6tables, mount, umount)

    - macro: kube_proxy_children
      condition: proc.pname = kube-proxy and proc.name in (iptables, ip6tables, iptables-restor, iptables-save, ip6tables-resto, ip6tables-save)

    - macro: flanneld_children
      condition: (proc.pname = flanneld and proc.name in (iptables))
        or container.id = host and (
        (proc.aname[2] = flannel and proc.pname = bridge and proc.name = host-local)
        or (proc.pname = flannel and proc.name = bridge)
        )

    - macro: containerd_children
      condition: (
        (proc.pname = containerd and proc.name in (flannel, loopback, portmap, containerd-shim))
        or (proc.pname = containerd-shim and proc.name in (runc))
        or (proc.aname[3] = systemd and proc.aname[2] = containerd-shim and proc.pname = runc and proc.name = exe and proc.exepath = /usr/sbin/runc)
        or (proc.aname[3] = systemd and proc.aname[2] = containerd-shim and proc.pname = runc and proc.name = 6 and proc.cmdline = "6 init")
        or (proc.aname[3] = systemd and proc.aname[2] = containerd and proc.pname = containerd-shim and proc.name = containerd-shim)
        )

    - macro: falco_children
      condition: k8s.ns.name = falco and k8s.pod.name startswith falco- 

    - macro: systemd_children
      condition: container.id = host and (
        (proc.pname = systemd and proc.name in (sa1, sadc, apt-helper, apt.systemd.dai, systemd-tmpfile, dpkg-db-backup, logrotate, sa2, e2scrub_all, fstrim))
        or (proc.aname[4] = systemd and proc.aname[3] = apt.systemd.dai and proc.aname[2] = apt.systemd.dai and proc.pname = apt-config and proc.name = dpkg)
        or (proc.aname[4] = systemd and proc.aname[3] = apt.systemd.dai and proc.aname[2] = apt.systemd.dai and proc.pname = apt-get and proc.name = dpkg)
        or (proc.aname[3] = systemd and proc.aname[2] = apt.systemd.dai and proc.pname = apt-config and proc.name in (dpkg))
        or (proc.aname[3] = systemd and proc.aname[2] = apt.systemd.dai and proc.pname = apt.systemd.dai and proc.name in (apt-config, apt-get, cmp, date))
        or (proc.aname[3] = systemd and proc.aname[2] = sa2 and proc.pname = xargs and proc.name in (rm, xargs))
        or (proc.aname[2] = systemd and proc.pname = apt-helper and proc.name in (apt-helper, systemctl))
        or (proc.aname[2] = systemd and proc.pname = apt.systemd.dai and proc.name in (apt-config, apt.systemd.dai, flock))
        or (proc.aname[2] = systemd and proc.pname = sa2 and proc.name in (date, find, grep, sar.sysstat, xargs))
        or (proc.aname[2] = systemd and proc.pname = dpkg-db-backup and proc.name in (basename, cmp, tar))
        or (proc.aname[4] = systemd and proc.aname[3] = apt.systemd.dai and proc.aname[2] = apt.systemd.dai and proc.pname = apt-config and proc.name = dpkg)
        or (proc.aname[3] = systemd and proc.aname[2] = systemd-udevd and proc.pname = systemd-udevd)
        or (proc.aname[2] = systemd and proc.aname[1] = systemd-udevd and proc.name = systemd-udevd)
        or (proc.aname[5] = systemd and proc.aname[4] = systemd-udevd and proc.aname[3] = systemd-udevd
           and proc.aname[2] startswith ifupdown-hotplu and proc.pname startswith ifupdown-hotplu and proc.name = ifquery)
        )

    - macro: cron_children
      condition: container.id = host and (
        (proc.aname[4] = cron and proc.aname[3] = cron and proc.aname[2] = sh and proc.pname = run-parts and proc.name in (apt-compat, aptitude, dpkg, logrotate, sysstat))
        or (proc.aname[4] = cron and proc.aname[3] = sh and proc.aname[2] = run-parts and proc.pname = aptitude and proc.name in (cmp))
        or (proc.aname[4] = systemd and proc.aname[3] = cron and proc.aname[2] = cron and proc.pname = sh and proc.name in (debian-sa1, run-parts))
        or (proc.aname[3] = systemd and proc.aname[2] = cron  and proc.pname = cron and proc.name in (sh))
        )

    #   or (proc.aname[3] =  and proc.aname[2] =  and proc.pname =  and proc.name in ())

    - macro: kmod_loader
      condition: (
        (proc.exepath = /usr/bin/kmod and proc.name = modprobe)
        )

    - macro: place_holder_ad_hoc
      condition: (
        (proc.aname[4] = systemd and proc.aname[3] =90gpg-agent and proc.aname[2] = 90gpg-agent and proc.pname = gpgconf and proc.name in (gpg-agent, gpgconf))
        )

    - macro: secure_k8s_apps
      condition: (k8s.ns.name in (dev,prd) and (
        (k8s.pod.name startswith dashboard- and proc.aname[3] = containerd-shim and proc.aname[2] = dumb-init and proc.pname = node and proc.name = node)
        or (k8s.pod.name startswith dashboard- and proc.aname[2] = containerd-shim and proc.pname = nginx and proc.name = nginx)
        or (k8s.pod.name startswith app- and proc.aname[2] = containerd-shim and proc.pname = gunicorn and proc.name = gunicorn)
        or (k8s.pod.name startswith db- and proc.aname[2] = systemd and proc.pname = containerd-shim and proc.name = redis-server)
        ))


    - macro: trusted_processes
      condition: (
        kubelet_children
        or kube_proxy_children
        or flanneld_children
        or containerd_children
        or cron_children
        or kmod_loader
        or systemd_children
        or falco_children
        or secure_k8s_apps
        )
    #    or ad_hoc

    - rule: Process Creation
      desc: Detect unexpected Process Creation
      enabled: true
      condition: spawned_process and not trusted_processes
      output: Process spawned (host=%evt.hostname parent_exe=%proc.pexe parent_exepath=%proc.pexepath pcmdline=%proc.pcmdline gparent=%proc.aname[2] ggparent=%proc.aname[3] aname[4]=%proc.aname[4] aname[5]=%proc.aname[5] aname[6]=%proc.aname[6] aname[7]=%proc.aname[7] evt_type=%evt.type user=%user.name user_uid=%user.uid user_loginuid=%user.loginuid process=%proc.name proc_exepath=%proc.exepath parent=%proc.pname command=%proc.cmdline pcomand=%proc.pcmdline gpcommand=%proc.acmdline[2] terminal=%proc.tty exe_flags=%evt.arg.flags %container.info)
      priority: WARNING
      tags: [catch_all, process, ktaka]



    - macro: never_true
      condition: (evt.num=0)

    - macro: open_write
      condition: (evt.type in (open,openat,openat2) and evt.is_open_write=true and fd.typechar='f' and fd.num>=0)

    - macro: open_read
      condition: (evt.type in (open,openat,openat2) and evt.is_open_read=true and fd.typechar='f' and fd.num>=0)

    - macro: create_symlink
      condition: (evt.type in (symlink, symlinkat) and evt.dir=<)

    - macro: create_hardlink
      condition: (evt.type in (link, linkat) and evt.dir=<)

    - macro: process_exempt
      condition: (
        (container.id = host and (
        (proc.name in (systemd))
        or (proc.pname = systemd and proc.name in (kubelet, containerd, containerd-shim, dbus-daemon, systemd, systemd-journal, systemd-udevd))
        or (proc.aname[2] = systemd and proc.pname = cron and proc.name = cron)
        or (proc.aname[2] = systemd and proc.pname = systemd and proc.name = "(tmpfiles)")
        or (proc.aname[3] = systemd and proc.aname[2] = cron and proc.pname = cron and proc.name = cron)
        or (proc.aname[3] = systemd and proc.aname[2] = apt.systemd.dai and proc.pname = apt-config and proc.name = apt-config)
        or (proc.aname[4] = systemd and proc.aname[3] = apt.systemd.dai and proc.aname[2] = apt.systemd.dai and proc.pname = apt-config and proc.name = apt-config)
        or (proc.aname[4] = systemd and proc.aname[3] = apt.systemd.dai and proc.aname[2] = apt.systemd.dai and proc.pname = apt-get and proc.name = apt-get)
        ))
        or (k8s.pod.name startswith kube-apiserver- and proc.name = kube-apiserver)
        or (k8s.pod.name startswith etcd- and proc.name = etcd)
        or (k8s.pod.name startswith coredns- and proc.name = coredns)
        or (k8s.pod.name startswith kube-proxy- and proc.name in (kube-proxy))
        or (k8s.pod.name startswith kube-flannel- and proc.name in (flanneld))
        or (k8s.pod.name startswith falco- and proc.name in (falco, grpc_global_tim, falcoctl-bin))
        or (k8s.pod.name startswith falco-falcosidekick- and proc.name startswith falcosidekick)
        or (k8s.pod.name startswith falco-falcosidekick-ui- and proc.name startswith runc)
        or (k8s.pod.name startswith falco-falcosidekick-ui-redis- and proc.name in (redis-server, node))
        or (proc.aname[3] = systemd and proc.aname[2] = containerd-shim and proc.pname = runc and proc.name startswith runc)
        or (proc.aname[2] = systemd and proc.pname = containerd-shim and proc.name startswith runc)
        )

    - macro: libraries
      condition: (
        (fd.name = /etc/ld.so.cache)
        or (fd.name startswith /usr/lib/)
        or (fd.name startswith /lib/x86_64-linux-gnu/)
        )

    - macro: file_read_exempt
      condition: (
        libraries
        or process_exempt
        or trusted_processes
        )

    - macro: file_write_exempt
      condition: (
        process_exempt
        or trusted_processes
        )

    - rule: Unexpected File Read
      desc: Detected unexpected File Read
      enabled: true
      condition: open_read and not file_read_exempt
      output: Detected Unexpected File Read (host=%evt.hostname file=%fd.name pcmdline=%proc.pcmdline gparent=%proc.aname[2] ggparent=%proc.aname[3] gggparent=%proc.aname[4] aname[5]=%proc.aname[5] aname[6]=%proc.aname[6] aname[7]=%proc.aname[7] evt_type=%evt.type read=%evt.is_open_read write=%evt.is_open_write user=%user.name user_uid=%user.uid user_loginuid=%user.loginuid process=%proc.name proc_exepath=%proc.exepath parent=%proc.pname command=%proc.cmdline terminal=%proc.tty exe_flags=%evt.arg.flags %container.info)
      priority: WARNING
      tags: [catch_all, file, ktaka]

    - rule: Unexpected File Write
      desc: Detected unexpected File Write
      enabled: true
      condition: (open_write or create_symlink or create_hardlink) and not file_write_exempt
      output: Detected Unexpected File  Write (host=%evt.hostname file=%fd.name pcmdline=%proc.pcmdline gparent=%proc.aname[2] ggparent=%proc.aname[3] gggparent=%proc.aname[4] aname[5]=%proc.aname[5] aname[6]=%proc.aname[6] aname[7]=%proc.aname[7] evt_type=%evt.type read=%evt.is_open_read write=%evt.is_open_write user=%user.name user_uid=%user.uid user_loginuid=%user.loginuid process=%proc.name proc_exepath=%proc.exepath parent=%proc.pname command=%proc.cmdline terminal=%proc.tty exe_flags=%evt.arg.flags %container.info)
      priority: WARNING
      tags: [catch_all, file, ktaka]
