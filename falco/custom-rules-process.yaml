customRules:

  custom-rules-process.yaml: |-

    - macro: apps_secure_k8s
      condition: (k8s.ns.name in (dev,prd) and (
        (k8s.pod.name startswith dashboard- and proc.aname[3] = containerd-shim and proc.aname[2] = dumb-init and proc.pname = node and proc.name = node)
        or (k8s.pod.name startswith dashboard- and proc.aname[2] = containerd-shim and proc.pname = nginx and proc.name = nginx)
        or (k8s.pod.name startswith app- and proc.aname[2] = containerd-shim and proc.pname = gunicorn and proc.name = gunicorn)
        or (k8s.pod.name startswith db- and proc.aname[2] = systemd and proc.pname = containerd-shim and proc.name = redis-server)
        ))

    - macro: user_apps
      condition: (
        apps_secure_k8s
        )

    #
    #
    #

    - macro: spawned_process
      condition: (evt.type in (execve, execveat) and evt.dir=<)

    - macro: proc_kube_proxy
      condition: k8s.ns.name = kube-system and k8s.pod.name startswith kube-proxy- and (
        proc.exepath = /usr/sbin/xtables-nft-multi
        )

    - macro: proc_kube_flannel
      condition: k8s.ns.name = kube-flannel and k8s.pod.name startswith kube-flannel-ds- and (
        proc.exepath = /sbin/xtables-nft-multi
        )

    - macro: proc_flannel
      condition: container.id = host and (
        (proc.exepath = /opt/cni/bin/host-local and proc.pname = bridge and proc.aname[2] = flannel)
        or (proc.exepath = /opt/cni/bin/bridge and proc.pname = flannel)
        or (proc.exepath = /opt/cni/bin/flannel and proc.pname = containerd)
        or (proc.exepath = /opt/cni/bin/loopback and proc.pname = containerd)
        or (proc.exepath = /opt/cni/bin/portmap and proc.pname = containerd)
        )

    - macro: proc_falco
      condition: k8s.ns.name = falco and k8s.pod.name startswith falco-falcosidekick-ui- and (
        proc.exepath = /app/falcosidekick-ui
        )

    - macro: proc_kubelet
      condition: container.id = host and proc.pname = kubelet and (
        proc.exepath = /sbin/xtables-nft-multi
        or proc.exepath = /usr/sbin/xtables-nft-multi
        or proc.exepath = /usr/bin/mount
        or proc.exepath = /usr/bin/umount
        )

    - macro: proc_cron
      condition: container.id = host and (
        (proc.name in (apt-compat, aptitude, dpkg, logrotate, sysstat) and proc.pname = run-parts and proc.aname[2] = sh and proc.aname[3] = cron and proc.aname[4] = cron)
        or (proc.name = debian-sa1 and proc.pname = sh and proc.aname[2] = cron and proc.aname[3] = cron and proc.aname[4] = systemd)
        or (proc.name = sh and proc.pname = cron  and proc.aname[2] = cron and proc.aname[3] = systemd)
        or (proc.name = mv and proc.pname = savelog and proc.aname[2] = aptitude and proc.aname[3] = run-parts)
        or proc.exepath = /usr/bin/run-parts
        or proc.exepath = /usr/bin/cmp
        or proc.exepath = /usr/bin/basename
        or proc.exepath = /usr/bin/dirname
        )

    - macro: proc_kmod
      condition: container.id = host and (
        (proc.exepath = /usr/bin/kmod and proc.name = modprobe)
        )

    - macro: proc_containerd
      condition: container.id = host and (
        (proc.exepath = /usr/local/bin/containerd-shim-runc-v2 and proc.name = containerd-shim)
        or (proc.exepath = /usr/sbin/runc and proc.name = exe)
        or (proc.exepath = /usr/sbin/runc and proc.name = runc)
        or (proc.cmdline = "6 init" and proc.name = 6 and proc.pname = runc)
        )

    - macro: proc_systemd_dai
      condition: container.id = host and (
        (proc.exepath = /usr/bin/apt-config and proc.name = apt-config)
        or (proc.exepath = /usr/bin/apt-get and proc.name = apt-get)
        or (proc.exepath = /usr/bin/cmp and proc.name = cmp)
        or (proc.exepath = /usr/bin/date and proc.name = date)
        or (proc.exepath = /usr/bin/dpkg and proc.name = dpkg)
        or (proc.exepath = /usr/bin/flock and proc.name = flock)
        or proc.name = apt.systemd.dai
        )

    - macro: proc_systemd
      condition: container.id = host and (
        (proc.pname = systemd and proc.name in (sa1, sadc, apt-helper, systemd-tmpfile, dpkg-db-backup, logrotate, sa2, e2scrub_all, fstrim))
        or (proc.aname[3] = systemd and proc.aname[2] = sa2 and proc.pname = xargs and proc.name in (rm, xargs))
        or (proc.aname[2] = systemd and proc.pname = apt-helper and proc.name in (apt-helper, systemctl))
        or (proc.aname[2] = systemd and proc.pname = sa2 and proc.name in (date, find, grep, sar.sysstat, xargs))
        or (proc.aname[2] = systemd and proc.pname = dpkg-db-backup and proc.name in (basename, cmp, tar))
        or (proc.aname[3] = systemd and proc.aname[2] = systemd-udevd and proc.pname = systemd-udevd)
        or (proc.aname[2] = systemd and proc.aname[1] = systemd-udevd and proc.name = systemd-udevd)
        or (proc.aname[5] = systemd and proc.aname[4] = systemd-udevd and proc.aname[3] = systemd-udevd
           and proc.aname[2] startswith ifupdown-hotplu and proc.pname startswith ifupdown-hotplu and proc.name = ifquery)
        or  proc.exepath = /usr/lib/systemd/systemd
        )

    - macro: proc_sshd_initialize
      condition: container.id = host and (
        (proc.exepath in (/usr/bin/gpgconf, /usr/bin/gpg-agent))
        or (proc.pname = systemd and proc.name = 90gpg-agent)
        or (proc.pname = 90gpg-agent and proc.name = awk)
        or proc.exepath = /usr/lib/systemd/user-environment-generators/30-systemd-environment-d-generator
        or proc.exepath = /usr/lib/systemd/user-generators/systemd-xdg-autostart-generator
        or proc.exepath = /usr/lib/systemd/systemd-sysctl
        or proc.exepath = /usr/lib/systemd/systemd-user-runtime-dir
        or proc.exepath = /usr/bin/systemd-tmpfiles
        or proc.exepath = /usr/bin/cat
        or proc.exepath = /usr/bin/env
        or proc.exepath = /usr/bin/id
        or proc.exepath = /usr/bin/mesg
        or proc.exepath = /usr/bin/systemctl
        or proc.exepath = /usr/bin/uname
        )

    - macro: proc_trusted
      condition: (
        proc_kube_proxy
        or proc_kube_flannel
        or proc_flannel
        or proc_falco
        or proc_kubelet
        or proc_cron
        or proc_kmod
        or proc_containerd
        or proc_systemd_dai
        or proc_systemd
        or proc_sshd_initialize
        )

    - rule: Process Creation
      desc: Detect unexpected Process Creation
      enabled: true
      condition: spawned_process and not (proc_trusted or user_apps)
      output: Process spawned (host=%evt.hostname parent_exe=%proc.pexe parent_exepath=%proc.pexepath pcmdline=%proc.pcmdline gparent=%proc.aname[2] ggparent=%proc.aname[3] aname[4]=%proc.aname[4] aname[5]=%proc.aname[5] aname[6]=%proc.aname[6] aname[7]=%proc.aname[7] evt_type=%evt.type user=%user.name user_uid=%user.uid user_loginuid=%user.loginuid process=%proc.name proc_exepath=%proc.exepath parent=%proc.pname command=%proc.cmdline pcomand=%proc.pcmdline gpcommand=%proc.acmdline[2] terminal=%proc.tty exe_flags=%evt.arg.flags %container.info)
      priority: WARNING
      tags: [catch_all, process, ktaka]

